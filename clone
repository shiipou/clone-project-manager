#!/bin/bash

script_url=https://raw.githubusercontent.com/shiipou/clone-project-manager/main/clone

# if $1 equals upgrade, then upgrade the script
if [ "$1" = "upgrade" ]; then
    script_path=$(which clone)
    if [ -z "$script_path" ]; then
        # Get absolute path of the script using $0 since $script_path is empty
        script_path=$(readlink -f "$0")
    fi
    echo "Script path: $script_path"

    echo "Upgrading..."
    tmp=$(mktemp)
    curl -fsSLo "$tmp" "$script_url"
    chmod +x "$tmp"
    mv "$tmp" "$script_path"
    echo "Done"
    exit
fi

path_prefix=''
# Regex for github https or ssh url
regex="^(http|https|git)(:\/\/|@)([^\/:]+)[\/:]([^\/:]+)\/(.+)(.git)?$"
if [[ "$OSTYPE" == "darwin"* ]]; then
    PROJECTS_FILE="$HOME/Library/Application Support/Code/User/globalStorage/alefragnani.project-manager/projects.json"
elif [[ "$OSTYPE" == "msys" ]]; then
    PROJECTS_FILE="/c/Users/$USERNAME/AppData/Roaming/Code/User/globalStorage/alefragnani.project-manager/projects.json"
elif [[ $(grep -i microsoft /proc/version) ]]; then
    PROJECTS_FILE="/mnt/c/Users/$USER/AppData/Roaming/Code/User/globalStorage/alefragnani.project-manager/projects.json"
    # This condition is for when the `Project Manager` extension is installed on Windows and not on WSL.
    if [ ! -d "$PROJECTS_FILE" ]; then
        WINDOWS_USERNAME=$(cmd.exe /c echo %USERNAME% 2>/dev/null | tr -d '\r')
        PROJECTS_FILE="/mnt/c/Users/$WINDOWS_USERNAME/AppData/Roaming/Code/User/globalStorage/alefragnani.project-manager/projects.json"
    fi

    path_prefix='vscode-remote://wsl+ubuntu'
else
    PROJECTS_FILE="$HOME/.config/Code/User/globalStorage/alefragnani.project-manager/projects.json"
fi
DEFAULT_GIT_HOME="$HOME/dev"
if [ -z "$GIT_HOME" ]; then
    echo "GIT_HOME is not set. Using default value: $DEFAULT_GIT_HOME"
    GIT_HOME="$DEFAULT_GIT_HOME"
fi

url="$1"
# Check if the first argument is a valid url
if [[ $1 =~ $regex ]]; then
    # Extract the parts of the url
    protocol=${BASH_REMATCH[1]}
    separator=${BASH_REMATCH[2]}
    hostname=${BASH_REMATCH[3]}
    user=${BASH_REMATCH[4]}
    repo=${BASH_REMATCH[5]}
    path="$GIT_HOME/$hostname/$user/$repo"

    if ! ls $path &> /dev/null
    then
        git clone "$url" "$path"

        # If the clone was successful, then print a success message
        if [ $? -eq 0 ]; then
            echo "Cloned $url"
        else
            # If the clone failed, then print an error
            echo "Error cloning $url"
            exit
        fi
    else
        echo "Repo already exists"
    fi
    # Check if JQ is installed
    if ! command -v jq &> /dev/null
    then
        echo "If you install jq, then the repo will be added to the list of repos in the VSCode's project manager extension"
    else
        # adding the repo to the list of repos in /home/shiishii/.config/Code/User/globalStorage/alefragnani.project-manager/projects.json
        # if the repo was not already present
        if ! grep -q "$path" "$PROJECTS_FILE"
        then
            echo "Adding the repo to the list of repos in VSCode's project manager extension..."
            # Add the repo to the list of repos
            cat "$PROJECTS_FILE" | jq ". += [{\"name\": \"$repo\", \"rootPath\": \"${path_prefix}${path}\", \"paths\": [], \"tags\": [\"$user\"]}]" > "$PROJECTS_FILE.tmp"
            mv "$PROJECTS_FILE.tmp" "$PROJECTS_FILE"
        fi
    fi
    echo -e "Your project is available at this path : \n\t ${path}"
    echo "Done"
else
    # If the first argument is not a valid url, then print an error
    echo "Invalid url"
fi
